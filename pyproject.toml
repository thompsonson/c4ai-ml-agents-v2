[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ml-agents-v2"
version = "0.1.0"
description = "ML Agents v2 - Reasoning research platform"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "C4AI Research Team"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "python-dotenv>=1.0.0",      # Environment variable management
    "openai>=1.51.0",            # OpenRouter compatible async client
    "httpx>=0.25.0",             # Async HTTP client for direct API calls
    "pydantic>=2.5.0",           # Configuration validation
    "pydantic-settings>=2.0.0",  # Settings management
    "sqlalchemy>=2.0.0",         # Database ORM
    "alembic>=1.13.0",           # Database migrations
    "structlog>=23.2.0",         # Structured logging
    "click>=8.1.0",              # CLI framework
    "rich>=13.7.0",              # CLI formatting and progress bars
    "dependency-injector>=4.41.0", # Dependency injection
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "responses>=0.24.0",         # HTTP request mocking
    "black>=23.12.0",
    "ruff>=0.1.8",
    "mypy>=1.8.0",
]

[project.scripts]
ml-agents = "ml_agents_v2.cli.main:cli"

[tool.hatch.build.targets.wheel]
packages = ["src/ml_agents_v2"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"